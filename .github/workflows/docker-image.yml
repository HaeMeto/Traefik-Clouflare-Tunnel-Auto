name: Build and Push to Docker Hub

on:
  push:
    branches: [ main, master ]   # build bila push ke branch utama
  workflow_dispatch:             # bisa manual run

permissions:
  contents: write   # untuk membuat GitHub Release (opsional)
  packages: read

jobs:
  build-and-push:
    name: Build and Push Docker image
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # (Opsional) Python deps & test bila diperlukan
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies (requirements.txt if present)
        if: hashFiles('requirements.txt') != ''
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests (if pytest available)
        run: |
          if python - <<'PY'
          import importlib; importlib.import_module('pytest')
          PY
          then
            pytest -q
          else
            echo "pytest not installed; skipping tests"
          fi

      # === Ambil VERSION hanya dari pyproject.toml ===
      - name: Resolve version from pyproject.toml
        id: ver
        shell: bash
        run: |
          set -euo pipefail
          if [[ ! -f pyproject.toml ]]; then
            echo "❌ pyproject.toml tidak ditemukan."
            exit 1
          fi

          # Coba PEP 621: [project] version = "X.Y.Z"
          VERSION="$(awk '
            BEGIN{in_proj=0}
            /^\[project\]/{in_proj=1; next}
            /^\[/{if(in_proj) exit}
            in_proj && $1 ~ /^version$/ {
              gsub(/["'"'"']/, "", $0);
              print $3; exit
            }
          ' pyproject.toml)"

          # Fallback umum (Poetry): version = "X.Y.Z" di root/section lain
          if [[ -z "${VERSION:-}" ]]; then
            VERSION="$(sed -nE 's/^[[:space:]]*version[[:space:]]*=[[:space:]]*"([^"]+)".*$/\1/p' pyproject.toml | head -n1)"
          fi

          # Validasi semver sederhana X.Y.Z
          if [[ -z "${VERSION:-}" || ! "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ version tidak valid di pyproject.toml (harus X.Y.Z). Dapat: '${VERSION:-<kosong>}'"
            exit 1
          fi

          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "📦 Version: $VERSION"

      # === Buildx multi-arch ===
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # === Hanya dua tag: X.Y.Z dan latest ===
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/traefik-cloudflare-tunnel-auto
          tags: |
            type=raw,value=${{ steps.ver.outputs.version }}
            type=raw,value=latest
          labels: |
            org.opencontainers.image.version=${{ steps.ver.outputs.version }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # === (Opsional) GitHub Release dengan body sederhana ===
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.ver.outputs.version }}
          name: v${{ steps.ver.outputs.version }}
          body: |
            ## Docker Images
            - `${{ secrets.DOCKERHUB_USERNAME }}/traefik-cloudflare-tunnel-auto:${{ steps.ver.outputs.version }}`
            - `${{ secrets.DOCKERHUB_USERNAME }}/traefik-cloudflare-tunnel-auto:latest`
            Built for linux/amd64 and linux/arm64.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
